html {
  font-size: map-get($base-font-size, default);

  @include breakpoint(xlarge) {
    font-size: map-get($base-font-size, xlarge);
  }
  @include breakpoint(large) {
    font-size: map-get($base-font-size, large);
  }
  @include breakpoint(medium) {
    font-size: map-get($base-font-size, medium);
  }
  @include breakpoint(small) {
    font-size: map-get($base-font-size, small);
  }
  @include breakpoint(xsmall) {
    font-size: map-get($base-font-size, xsmall);
  }
}

body {
  font-family: Eurostile, Arial, Helvetica, sans-serif;
  font-style: normal;
  font-size: map-get($font-size, normal);
  line-height: $line-height;
  margin: 0;
}

h1 {
  font-size: map-get($font-size, xxxlarge);
  line-height: $line-height;
}
h2 {
  font-size: map-get($font-size, xxlarge);
  line-height: $line-height;
}
h3 {
  font-size: map-get($font-size, xlarge);
  line-height: $line-height;
}
h4 {
  font-size: map-get($font-size, large);
  line-height: $line-height;
}
h5 {
  font-size: map-get($font-size, medium);
  line-height: $line-height;
}
h6 {
  font-size: map-get($font-size, normal);
  line-height: $line-height;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: Kimberley, Arial, Helvetica, sans-serif;

  /* http://owumaro.github.io/text-stroke-generator/ */
  @include vendor('text-shadow',
    map-get($palette, bg-light) + ' 3px 0px 0px, ' +
    map-get($palette, bg-light) + ' 2.83487px 0.981584px 0px, ' +
    map-get($palette, bg-light) + ' 2.35766px 1.85511px 0px, ' +
    map-get($palette, bg-light) + ' 1.62091px 2.52441px 0px, ' +
    map-get($palette, bg-light) + ' 0.705713px 2.91581px 0px, ' +
    map-get($palette, bg-light) + ' -0.287171px 2.98622px 0px, ' +
    map-get($palette, bg-light) + ' -1.24844px 2.72789px 0px, ' +
    map-get($palette, bg-light) + ' -2.07227px 2.16926px 0px, ' +
    map-get($palette, bg-light) + ' -2.66798px 1.37182px 0px, ' +
    map-get($palette, bg-light) + ' -2.96998px 0.42336px 0px, ' +
    map-get($palette, bg-light) + ' -2.94502px -0.571704px 0px, ' +
    map-get($palette, bg-light) + ' -2.59586px -1.50383px 0px, ' +
    map-get($palette, bg-light) + ' -1.96093px -2.27041px 0px, ' +
    map-get($palette, bg-light) + ' -1.11013px -2.78704px 0px, ' +
    map-get($palette, bg-light) + ' -0.137119px -2.99686px 0px, ' +
    map-get($palette, bg-light) + ' 0.850987px -2.87677px 0px, ' +
    map-get($palette, bg-light) + ' 1.74541px -2.43999px 0px, ' +
    map-get($palette, bg-light) + ' 2.44769px -1.73459px 0px, ' +
    map-get($palette, bg-light) + ' 2.88051px -0.838247px 0px'
  );
}

ol,
ul {
  margin: 0;
  padding: 0 0 0 map-get($padding, xlarge);
}

ol {
  list-style-type: decimal;
  ol {
    list-style-type: upper-alpha;
      ol {
        list-style-type: upper-roman;
        ol {
          list-style-type: lower-alpha;
          ol {
            list-style-type: lower-roman;
          }
        }
      }
  }
}

ul {
  list-style-type: disc;
  ul {
    list-style-type: circle;
      ul {
        list-style-type: square;
        ul {
          list-style-type: circle;
          ul {
            list-style-type: disc;
          }
        }
      }
  }
}

li {
  margin: map-get($padding, small) 0;
}

p {
  margin: map-get($padding, large) 0;
}

button,
.button {
  @include vendor('border-radius', '4px');
  @include vendor('box-shadow', 'inset 0 1px 0 ' + transparentize(map-get($palette, fg-light), 0.4) + ', 0 1px 1px ' + transparentize(map-get($palette, fg-dark), 0.2));
  @include vendor('transition-duration', '' + map-get($duration, xshort));
  @include vendor('user-select', 'none');
  cursor: pointer;
  padding: map-get($padding, small) map-get($padding, normal);
  background: darken(map-get($palette, color2), 15);
  color: map-get($palette, fg-light);
  border: solid 1px darken(map-get($palette, color3), 15);
  text-shadow: 0 -1px 0 transparentize(map-get($palette, fg-dark), 0.4);

  &:hover {
    background: darken(map-get($palette, color2), 20);
    border: solid 1px darken(map-get($palette, color3), 20);
    text-decoration: none;
  }

  &:active {
    @include vendor('box-shadow', 'inset 0 1px 4px ' + transparentize(map-get($palette, fg-dark), 0.6));
    background: darken(map-get($palette, color2), 25);
    border: solid 1px darken(map-get($palette, color3), 25);
  }
}

a,
a:link {
  cursor: pointer;
  color: map-get($palette, color2);
  border-bottom: 1px dotted map-get($palette, color2);
  text-decoration: none;

  &:visited {
    color: map-get($palette, color3);
    border-bottom-color: map-get($palette, color3);
  }

  &:hover {
    color: map-get($palette, color1);
    border-bottom-color: map-get($palette, color1);
  }

  &:focus {
    color: map-get($palette, color1);
    border-bottom-color: map-get($palette, color1);
  }

  &:active {
    @include vendor('text-shadow', '0 0 1px ' + transparentize(map-get($palette, color1), 0.4));
    color: map-get($palette, color1);
    border-bottom: 1px solid map-get($palette, color1);
  }
}

table {
  border-collapse: collapse;
  margin: map-get($padding, large) 0;

  thead, tfoot {
    th {
      background-color: darken(map-get($palette, bg-light), 40);
      color: map-get($palette, fg-light);
      font-weight: bold;
    }
  }

  td, th {
    text-align: left;
    vertical-align: top;
  }

  &.Table {
    &--bordered {
      td, th {
        border: 1px solid lighten(map-get($palette, fg-dark), 50);
      }
    }

    &--padded {
      td, th {
        padding: map-get($padding, small);
      }
    }

    &--extra-padded {
      th {
        padding: map-get($padding, small) map-get($padding, large);
      }
      td {
        padding: map-get($padding, large);
      }
    }

    &--expanded {
      width: 100%;
    }

    &--odd-even-rows {
      tr:nth-child(2n+0) td {
          background-color: darken(map-get($palette, bg-light), 5)
      }
      tr:nth-child(2n+1) td {
          background-color: darken(map-get($palette, bg-light), 15)
      }
    }

    &--hover-rows {
      tr:hover td {
        background-color: darken(map-get($palette, bg-light), 25)
      }
    }

    &--hover-odd-even-rows {
      tr:nth-child(2n+0) td {
          background-color: darken(map-get($palette, bg-light), 5)
      }
      tr:nth-child(2n+1) td {
          background-color: darken(map-get($palette, bg-light), 15)
      }

      tr:hover td {
          background-color: darken(map-get($palette, bg-light), 25)
      }
    }
  }
}