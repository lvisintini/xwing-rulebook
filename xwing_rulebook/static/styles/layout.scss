@include skel-breakpoints((
  xlarge: '(max-width: ' + val($breakpoints, xlarge) + ')',
  large: '(max-width: ' + val($breakpoints, large) + ')',
  medium: '(max-width: ' + val($breakpoints, medium) + ')',
  small: '(max-width: ' + val($breakpoints, small) + ')',
  xsmall: '(max-width: ' + val($breakpoints, xsmall) + ')',
));


.PageWrapper {
  @include vendor('display', 'flex');
  @include vendor('flex-direction', 'column');
  @include vendor('align-items', 'center');

  margin: 0 auto;
  min-height: 100vh;
  background-color: val($palette, bg-dark);

  &--breakpoints {
    @include breakpoint(xlarge) {
      background-color: red;
    }
    @include breakpoint(large) {
      background-color: yellow;
    }
    @include breakpoint(medium) {
      background-color: green;
    }
    @include breakpoint(small) {
      background-color: blue;
    }
    @include breakpoint(xsmall) {
      background-color: orange;
    }
  }

  &__Header,
  &__Content,
  &__Footer {
    width: val($sizes, normal-content-width);
  }

  &__Content {}
}

.Section {
  &__Inner {
    background-color: val($palette, bg-light);
    color: val($palette, fg-dark);

    &--shadow{
      @include vendor('box-shadow', '0px 0px 50px black');
    }

    &--no-background {
      background: none;
      color: val($palette, fg-light);
    }

    &--manual {
      @include vendor('box-shadow', '0px 0px 50px black');
      background: transparent url("../images/background/manual-background.jpg") repeat-y center top;
      padding: val($padding, large) val($padding, normal);
    }
  }
}
